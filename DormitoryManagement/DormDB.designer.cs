#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DormitoryManagement
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LogisticsDB")]
	public partial class DormDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertUnitFee(UnitFee instance);
    partial void UpdateUnitFee(UnitFee instance);
    partial void DeleteUnitFee(UnitFee instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDorm(Dorm instance);
    partial void UpdateDorm(Dorm instance);
    partial void DeleteDorm(Dorm instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertFuelFee(FuelFee instance);
    partial void UpdateFuelFee(FuelFee instance);
    partial void DeleteFuelFee(FuelFee instance);
    partial void InsertLodging(Lodging instance);
    partial void UpdateLodging(Lodging instance);
    partial void DeleteLodging(Lodging instance);
    partial void InsertOtherFee(OtherFee instance);
    partial void UpdateOtherFee(OtherFee instance);
    partial void DeleteOtherFee(OtherFee instance);
    partial void InsertDormType(DormType instance);
    partial void UpdateDormType(DormType instance);
    partial void DeleteDormType(DormType instance);
    partial void InsertTempLodging(TempLodging instance);
    partial void UpdateTempLodging(TempLodging instance);
    partial void DeleteTempLodging(TempLodging instance);
    partial void InsertVerifyOrder(VerifyOrder instance);
    partial void UpdateVerifyOrder(VerifyOrder instance);
    partial void DeleteVerifyOrder(VerifyOrder instance);
    partial void InsertCharge(Charge instance);
    partial void UpdateCharge(Charge instance);
    partial void DeleteCharge(Charge instance);
    partial void InsertBlackList(BlackList instance);
    partial void UpdateBlackList(BlackList instance);
    partial void DeleteBlackList(BlackList instance);
    partial void InsertAutoQuit(AutoQuit instance);
    partial void UpdateAutoQuit(AutoQuit instance);
    partial void DeleteAutoQuit(AutoQuit instance);
    partial void InsertLoginLog(LoginLog instance);
    partial void UpdateLoginLog(LoginLog instance);
    partial void DeleteLoginLog(LoginLog instance);
    partial void InsertApply(Apply instance);
    partial void UpdateApply(Apply instance);
    partial void DeleteApply(Apply instance);
    partial void InsertAuthority(Authority instance);
    partial void UpdateAuthority(Authority instance);
    partial void DeleteAuthority(Authority instance);
    partial void InsertDepMap(DepMap instance);
    partial void UpdateDepMap(DepMap instance);
    partial void DeleteDepMap(DepMap instance);
    partial void InsertImportLog(ImportLog instance);
    partial void UpdateImportLog(ImportLog instance);
    partial void DeleteImportLog(ImportLog instance);
    partial void InsertChangeDepLog(ChangeDepLog instance);
    partial void UpdateChangeDepLog(ChangeDepLog instance);
    partial void DeleteChangeDepLog(ChangeDepLog instance);
    partial void InsertEventLog(EventLog instance);
    partial void UpdateEventLog(EventLog instance);
    partial void DeleteEventLog(EventLog instance);
    partial void InsertExtraFee(ExtraFee instance);
    partial void UpdateExtraFee(ExtraFee instance);
    partial void DeleteExtraFee(ExtraFee instance);
    partial void InsertMonthlyFee(MonthlyFee instance);
    partial void UpdateMonthlyFee(MonthlyFee instance);
    partial void DeleteMonthlyFee(MonthlyFee instance);
    #endregion
		
		public DormDBDataContext() : 
				base(global::DormitoryManagement.Properties.Settings.Default.LogisticsDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DormDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DormDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DormDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DormDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Area> Area
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<UnitFee> UnitFee
		{
			get
			{
				return this.GetTable<UnitFee>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Dorm> Dorm
		{
			get
			{
				return this.GetTable<Dorm>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<FuelFee> FuelFee
		{
			get
			{
				return this.GetTable<FuelFee>();
			}
		}
		
		public System.Data.Linq.Table<Lodging> Lodging
		{
			get
			{
				return this.GetTable<Lodging>();
			}
		}
		
		public System.Data.Linq.Table<OtherFee> OtherFee
		{
			get
			{
				return this.GetTable<OtherFee>();
			}
		}
		
		public System.Data.Linq.Table<DormType> DormType
		{
			get
			{
				return this.GetTable<DormType>();
			}
		}
		
		public System.Data.Linq.Table<TempLodging> TempLodging
		{
			get
			{
				return this.GetTable<TempLodging>();
			}
		}
		
		public System.Data.Linq.Table<VerifyOrder> VerifyOrder
		{
			get
			{
				return this.GetTable<VerifyOrder>();
			}
		}
		
		public System.Data.Linq.Table<Charge> Charge
		{
			get
			{
				return this.GetTable<Charge>();
			}
		}
		
		public System.Data.Linq.Table<BlackList> BlackList
		{
			get
			{
				return this.GetTable<BlackList>();
			}
		}
		
		public System.Data.Linq.Table<AutoQuit> AutoQuit
		{
			get
			{
				return this.GetTable<AutoQuit>();
			}
		}
		
		public System.Data.Linq.Table<LoginLog> LoginLog
		{
			get
			{
				return this.GetTable<LoginLog>();
			}
		}
		
		public System.Data.Linq.Table<VwDormsChanged> VwDormsChanged
		{
			get
			{
				return this.GetTable<VwDormsChanged>();
			}
		}
		
		public System.Data.Linq.Table<Apply> Apply
		{
			get
			{
				return this.GetTable<Apply>();
			}
		}
		
		public System.Data.Linq.Table<Authority> Authority
		{
			get
			{
				return this.GetTable<Authority>();
			}
		}
		
		public System.Data.Linq.Table<DepMap> DepMap
		{
			get
			{
				return this.GetTable<DepMap>();
			}
		}
		
		public System.Data.Linq.Table<ImportLog> ImportLog
		{
			get
			{
				return this.GetTable<ImportLog>();
			}
		}
		
		public System.Data.Linq.Table<VwGetSalaryDepByAccount> VwGetSalaryDepByAccount
		{
			get
			{
				return this.GetTable<VwGetSalaryDepByAccount>();
			}
		}
		
		public System.Data.Linq.Table<VwFailImport> VwFailImport
		{
			get
			{
				return this.GetTable<VwFailImport>();
			}
		}
		
		public System.Data.Linq.Table<ChangeDepLog> ChangeDepLog
		{
			get
			{
				return this.GetTable<ChangeDepLog>();
			}
		}
		
		public System.Data.Linq.Table<EventLog> EventLog
		{
			get
			{
				return this.GetTable<EventLog>();
			}
		}
		
		public System.Data.Linq.Table<ExtraFee> ExtraFee
		{
			get
			{
				return this.GetTable<ExtraFee>();
			}
		}
		
		public System.Data.Linq.Table<MonthlyFee> MonthlyFee
		{
			get
			{
				return this.GetTable<MonthlyFee>();
			}
		}
		
		public System.Data.Linq.Table<VwChangeReport> VwChangeReport
		{
			get
			{
				return this.GetTable<VwChangeReport>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_fuel_used_of_dorm")]
		public ISingleResult<get_fuel_used_of_dormResult> get_fuel_used_of_dorm([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dorm_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pre_year_month, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string year_month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dorm_id, pre_year_month, year_month);
			return ((ISingleResult<get_fuel_used_of_dormResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.check_fuels_used")]
		public ISingleResult<check_fuels_usedResult> check_fuels_used([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string area_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string dorm_number, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pre_year_month, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string year_month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), area_name, dorm_number, pre_year_month, year_month);
			return ((ISingleResult<check_fuels_usedResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.take_duplicate_record")]
		public ISingleResult<take_duplicate_recordResult> take_duplicate_record()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<take_duplicate_recordResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.take_first_fuel_input")]
		public ISingleResult<take_first_fuel_inputResult> take_first_fuel_input([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string areaName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string year_month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), areaName, year_month);
			return ((ISingleResult<take_first_fuel_inputResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.take_input_fuels")]
		public ISingleResult<take_input_fuelsResult> take_input_fuels([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string area_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string year_month, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string next_year_month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), area_name, year_month, next_year_month);
			return ((ISingleResult<take_input_fuelsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteCharge")]
		public int deleteCharge([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string year_month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year_month);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.copyColdWater")]
		public int copyColdWater([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string lastMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string thisMonth)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastMonth, thisMonth);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getSalaryDepByAccount")]
		public int getSalaryDepByAccount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string account, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), account, result);
			result = ((string)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.import_into_salary")]
		public int import_into_salary([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string year_month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="operator", DbType="VarChar(50)")] string @operator)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year_month, @operator);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getDiffDep")]
		public ISingleResult<getDiffDepResult> getDiffDep([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallDateTime")] System.Nullable<System.DateTime> out_date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), out_date);
			return ((ISingleResult<getDiffDepResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateHRLivingState")]
		public int updateHRLivingState([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string account, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isLiving)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), account, isLiving);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateAccountthroughDJB")]
		public int updateAccountthroughDJB([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string firstDay)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), firstDay);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getBlankAccount")]
		public ISingleResult<getBlankAccountResult> getBlankAccount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string firstDay)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), firstDay);
			return ((ISingleResult<getBlankAccountResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.copy2areaWater")]
		public int copy2areaWater([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string lastMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string thisMonth)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastMonth, thisMonth);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_user")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _register_date;
		
		private System.Nullable<short> _available;
		
		private string _comment;
		
		private EntitySet<Authority> _Authority;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onregister_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onregister_dateChanged();
    partial void OnavailableChanging(System.Nullable<short> value);
    partial void OnavailableChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public User()
		{
			this._Authority = new EntitySet<Authority>(new Action<Authority>(this.attach_Authority), new Action<Authority>(this.detach_Authority));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(20)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_register_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> register_date
		{
			get
			{
				return this._register_date;
			}
			set
			{
				if ((this._register_date != value))
				{
					this.Onregister_dateChanging(value);
					this.SendPropertyChanging();
					this._register_date = value;
					this.SendPropertyChanged("register_date");
					this.Onregister_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available", DbType="SmallInt")]
		public System.Nullable<short> available
		{
			get
			{
				return this._available;
			}
			set
			{
				if ((this._available != value))
				{
					this.OnavailableChanging(value);
					this.SendPropertyChanging();
					this._available = value;
					this.SendPropertyChanged("available");
					this.OnavailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Authority", Storage="_Authority", ThisKey="id", OtherKey="user_id")]
		public EntitySet<Authority> Authority
		{
			get
			{
				return this._Authority;
			}
			set
			{
				this._Authority.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Authority(Authority entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Authority(Authority entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_area")]
	public partial class Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _comment;
		
		private EntitySet<Dorm> _Dorm;
		
		private EntitySet<Charge> _Charge;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public Area()
		{
			this._Dorm = new EntitySet<Dorm>(new Action<Dorm>(this.attach_Dorm), new Action<Dorm>(this.detach_Dorm));
			this._Charge = new EntitySet<Charge>(new Action<Charge>(this.attach_Charge), new Action<Charge>(this.detach_Charge));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Dorm", Storage="_Dorm", ThisKey="id", OtherKey="area_number")]
		public EntitySet<Dorm> Dorm
		{
			get
			{
				return this._Dorm;
			}
			set
			{
				this._Dorm.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Charge", Storage="_Charge", ThisKey="id", OtherKey="area_id")]
		public EntitySet<Charge> Charge
		{
			get
			{
				return this._Charge;
			}
			set
			{
				this._Charge.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dorm(Dorm entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_Dorm(Dorm entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
		
		private void attach_Charge(Charge entity)
		{
			this.SendPropertyChanging();
			entity.Area1 = this;
		}
		
		private void detach_Charge(Charge entity)
		{
			this.SendPropertyChanging();
			entity.Area1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_unit_fee")]
	public partial class UnitFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<decimal> _price;
		
		private string _units;
		
		private System.Nullable<System.DateTime> _modified_date;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnunitsChanging(string value);
    partial void OnunitsChanged();
    partial void Onmodified_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_dateChanged();
    #endregion
		
		public UnitFee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_units", DbType="VarChar(50)")]
		public string units
		{
			get
			{
				return this._units;
			}
			set
			{
				if ((this._units != value))
				{
					this.OnunitsChanging(value);
					this.SendPropertyChanging();
					this._units = value;
					this.SendPropertyChanged("units");
					this.OnunitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified_date
		{
			get
			{
				return this._modified_date;
			}
			set
			{
				if ((this._modified_date != value))
				{
					this.Onmodified_dateChanging(value);
					this.SendPropertyChanging();
					this._modified_date = value;
					this.SendPropertyChanged("modified_date");
					this.Onmodified_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _number;
		
		private string _property;
		
		private System.Nullable<int> _hr_code;
		
		private string _comment;
		
		private EntitySet<Employee> _Employee;
		
		private EntitySet<Charge> _Charge;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnumberChanging(System.Nullable<int> value);
    partial void OnnumberChanged();
    partial void OnpropertyChanging(string value);
    partial void OnpropertyChanged();
    partial void Onhr_codeChanging(System.Nullable<int> value);
    partial void Onhr_codeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public Department()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			this._Charge = new EntitySet<Charge>(new Action<Charge>(this.attach_Charge), new Action<Charge>(this.detach_Charge));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int")]
		public System.Nullable<int> number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_property", DbType="VarChar(20)")]
		public string property
		{
			get
			{
				return this._property;
			}
			set
			{
				if ((this._property != value))
				{
					this.OnpropertyChanging(value);
					this.SendPropertyChanging();
					this._property = value;
					this.SendPropertyChanged("property");
					this.OnpropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hr_code", DbType="Int")]
		public System.Nullable<int> hr_code
		{
			get
			{
				return this._hr_code;
			}
			set
			{
				if ((this._hr_code != value))
				{
					this.Onhr_codeChanging(value);
					this.SendPropertyChanging();
					this._hr_code = value;
					this.SendPropertyChanged("hr_code");
					this.Onhr_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employee", ThisKey="id", OtherKey="department")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Charge", Storage="_Charge", ThisKey="id", OtherKey="department_id")]
		public EntitySet<Charge> Charge
		{
			get
			{
				return this._Charge;
			}
			set
			{
				this._Charge.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_Charge(Charge entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Charge(Charge entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_dorm")]
	public partial class Dorm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _number;
		
		private System.Nullable<int> _area_number;
		
		private System.Nullable<int> _type_id;
		
		private System.Nullable<short> _available;
		
		private string _comment;
		
		private string _dormSex;
		
		private System.Nullable<decimal> _rent;
		
		private System.Nullable<decimal> _manageCost;
		
		private string _forOrder;
		
		private EntitySet<FuelFee> _FuelFee;
		
		private EntitySet<Lodging> _Lodging;
		
		private EntitySet<OtherFee> _OtherFee;
		
		private EntitySet<AutoQuit> _AutoQuit;
		
		private EntityRef<Area> _Area;
		
		private EntityRef<DormType> _DormType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnumberChanging(string value);
    partial void OnnumberChanged();
    partial void Onarea_numberChanging(System.Nullable<int> value);
    partial void Onarea_numberChanged();
    partial void Ontype_idChanging(System.Nullable<int> value);
    partial void Ontype_idChanged();
    partial void OnavailableChanging(System.Nullable<short> value);
    partial void OnavailableChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OndormSexChanging(string value);
    partial void OndormSexChanged();
    partial void OnrentChanging(System.Nullable<decimal> value);
    partial void OnrentChanged();
    partial void OnmanageCostChanging(System.Nullable<decimal> value);
    partial void OnmanageCostChanged();
    partial void OnforOrderChanging(string value);
    partial void OnforOrderChanged();
    #endregion
		
		public Dorm()
		{
			this._FuelFee = new EntitySet<FuelFee>(new Action<FuelFee>(this.attach_FuelFee), new Action<FuelFee>(this.detach_FuelFee));
			this._Lodging = new EntitySet<Lodging>(new Action<Lodging>(this.attach_Lodging), new Action<Lodging>(this.detach_Lodging));
			this._OtherFee = new EntitySet<OtherFee>(new Action<OtherFee>(this.attach_OtherFee), new Action<OtherFee>(this.detach_OtherFee));
			this._AutoQuit = new EntitySet<AutoQuit>(new Action<AutoQuit>(this.attach_AutoQuit), new Action<AutoQuit>(this.detach_AutoQuit));
			this._Area = default(EntityRef<Area>);
			this._DormType = default(EntityRef<DormType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="VarChar(50)")]
		public string number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area_number", DbType="Int")]
		public System.Nullable<int> area_number
		{
			get
			{
				return this._area_number;
			}
			set
			{
				if ((this._area_number != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onarea_numberChanging(value);
					this.SendPropertyChanging();
					this._area_number = value;
					this.SendPropertyChanged("area_number");
					this.Onarea_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_id", DbType="Int")]
		public System.Nullable<int> type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					if (this._DormType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available", DbType="SmallInt")]
		public System.Nullable<short> available
		{
			get
			{
				return this._available;
			}
			set
			{
				if ((this._available != value))
				{
					this.OnavailableChanging(value);
					this.SendPropertyChanging();
					this._available = value;
					this.SendPropertyChanged("available");
					this.OnavailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dorm_sex", Storage="_dormSex", DbType="VarChar(8)")]
		public string dormSex
		{
			get
			{
				return this._dormSex;
			}
			set
			{
				if ((this._dormSex != value))
				{
					this.OndormSexChanging(value);
					this.SendPropertyChanging();
					this._dormSex = value;
					this.SendPropertyChanged("dormSex");
					this.OndormSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rent", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> rent
		{
			get
			{
				return this._rent;
			}
			set
			{
				if ((this._rent != value))
				{
					this.OnrentChanging(value);
					this.SendPropertyChanging();
					this._rent = value;
					this.SendPropertyChanged("rent");
					this.OnrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="manage_cost", Storage="_manageCost", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> manageCost
		{
			get
			{
				return this._manageCost;
			}
			set
			{
				if ((this._manageCost != value))
				{
					this.OnmanageCostChanging(value);
					this.SendPropertyChanging();
					this._manageCost = value;
					this.SendPropertyChanged("manageCost");
					this.OnmanageCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="for_order", Storage="_forOrder", DbType="VarChar(50)")]
		public string forOrder
		{
			get
			{
				return this._forOrder;
			}
			set
			{
				if ((this._forOrder != value))
				{
					this.OnforOrderChanging(value);
					this.SendPropertyChanging();
					this._forOrder = value;
					this.SendPropertyChanged("forOrder");
					this.OnforOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dorm_FuelFee", Storage="_FuelFee", ThisKey="id", OtherKey="dorm_id")]
		public EntitySet<FuelFee> FuelFee
		{
			get
			{
				return this._FuelFee;
			}
			set
			{
				this._FuelFee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dorm_Lodging", Storage="_Lodging", ThisKey="id", OtherKey="dorm_id")]
		public EntitySet<Lodging> Lodging
		{
			get
			{
				return this._Lodging;
			}
			set
			{
				this._Lodging.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dorm_OtherFee", Storage="_OtherFee", ThisKey="id", OtherKey="dorm_id")]
		public EntitySet<OtherFee> OtherFee
		{
			get
			{
				return this._OtherFee;
			}
			set
			{
				this._OtherFee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dorm_AutoQuit", Storage="_AutoQuit", ThisKey="id", OtherKey="dorm_id")]
		public EntitySet<AutoQuit> AutoQuit
		{
			get
			{
				return this._AutoQuit;
			}
			set
			{
				this._AutoQuit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Dorm", Storage="_Area", ThisKey="area_number", OtherKey="id", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.Dorm.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.Dorm.Add(this);
						this._area_number = value.id;
					}
					else
					{
						this._area_number = default(Nullable<int>);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DormType_Dorm", Storage="_DormType", ThisKey="type_id", OtherKey="id", IsForeignKey=true)]
		public DormType DormType
		{
			get
			{
				return this._DormType.Entity;
			}
			set
			{
				DormType previousValue = this._DormType.Entity;
				if (((previousValue != value) 
							|| (this._DormType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DormType.Entity = null;
						previousValue.Dorm.Remove(this);
					}
					this._DormType.Entity = value;
					if ((value != null))
					{
						value.Dorm.Add(this);
						this._type_id = value.id;
					}
					else
					{
						this._type_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("DormType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FuelFee(FuelFee entity)
		{
			this.SendPropertyChanging();
			entity.Dorm = this;
		}
		
		private void detach_FuelFee(FuelFee entity)
		{
			this.SendPropertyChanging();
			entity.Dorm = null;
		}
		
		private void attach_Lodging(Lodging entity)
		{
			this.SendPropertyChanging();
			entity.Dorm = this;
		}
		
		private void detach_Lodging(Lodging entity)
		{
			this.SendPropertyChanging();
			entity.Dorm = null;
		}
		
		private void attach_OtherFee(OtherFee entity)
		{
			this.SendPropertyChanging();
			entity.Dorm = this;
		}
		
		private void detach_OtherFee(OtherFee entity)
		{
			this.SendPropertyChanging();
			entity.Dorm = null;
		}
		
		private void attach_AutoQuit(AutoQuit entity)
		{
			this.SendPropertyChanging();
			entity.Dorm = this;
		}
		
		private void detach_AutoQuit(AutoQuit entity)
		{
			this.SendPropertyChanging();
			entity.Dorm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _card_number;
		
		private string _account_number;
		
		private string _identify_number;
		
		private string _sex;
		
		private string _degree;
		
		private System.Nullable<int> _department;
		
		private string _household;
		
		private string _salary_type;
		
		private string _phone;
		
		private string _family_address;
		
		private string _family_phone;
		
		private string _family_connector;
		
		private string _comment;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _picture;
		
		private System.Nullable<int> _old_id;
		
		private string _identify_info;
		
		private EntitySet<Lodging> _Lodging;
		
		private EntitySet<OtherFee> _OtherFee;
		
		private EntitySet<TempLodging> _TempLodging;
		
		private EntitySet<BlackList> _BlackList;
		
		private EntitySet<AutoQuit> _AutoQuit;
		
		private EntityRef<Department> _Department1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncard_numberChanging(string value);
    partial void Oncard_numberChanged();
    partial void Onaccount_numberChanging(string value);
    partial void Onaccount_numberChanged();
    partial void Onidentify_numberChanging(string value);
    partial void Onidentify_numberChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OndegreeChanging(string value);
    partial void OndegreeChanged();
    partial void OndepartmentChanging(System.Nullable<int> value);
    partial void OndepartmentChanged();
    partial void OnhouseholdChanging(string value);
    partial void OnhouseholdChanged();
    partial void Onsalary_typeChanging(string value);
    partial void Onsalary_typeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onfamily_addressChanging(string value);
    partial void Onfamily_addressChanged();
    partial void Onfamily_phoneChanging(string value);
    partial void Onfamily_phoneChanged();
    partial void Onfamily_connectorChanging(string value);
    partial void Onfamily_connectorChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnpictureChanging(System.Data.Linq.Binary value);
    partial void OnpictureChanged();
    partial void Onold_idChanging(System.Nullable<int> value);
    partial void Onold_idChanged();
    partial void Onidentify_infoChanging(string value);
    partial void Onidentify_infoChanged();
    #endregion
		
		public Employee()
		{
			this._Lodging = new EntitySet<Lodging>(new Action<Lodging>(this.attach_Lodging), new Action<Lodging>(this.detach_Lodging));
			this._OtherFee = new EntitySet<OtherFee>(new Action<OtherFee>(this.attach_OtherFee), new Action<OtherFee>(this.detach_OtherFee));
			this._TempLodging = new EntitySet<TempLodging>(new Action<TempLodging>(this.attach_TempLodging), new Action<TempLodging>(this.detach_TempLodging));
			this._BlackList = new EntitySet<BlackList>(new Action<BlackList>(this.attach_BlackList), new Action<BlackList>(this.detach_BlackList));
			this._AutoQuit = new EntitySet<AutoQuit>(new Action<AutoQuit>(this.attach_AutoQuit), new Action<AutoQuit>(this.detach_AutoQuit));
			this._Department1 = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(40)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_number", DbType="VarChar(20)")]
		public string card_number
		{
			get
			{
				return this._card_number;
			}
			set
			{
				if ((this._card_number != value))
				{
					this.Oncard_numberChanging(value);
					this.SendPropertyChanging();
					this._card_number = value;
					this.SendPropertyChanged("card_number");
					this.Oncard_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="VarChar(50)")]
		public string account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this.Onaccount_numberChanging(value);
					this.SendPropertyChanging();
					this._account_number = value;
					this.SendPropertyChanged("account_number");
					this.Onaccount_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identify_number", DbType="VarChar(20)")]
		public string identify_number
		{
			get
			{
				return this._identify_number;
			}
			set
			{
				if ((this._identify_number != value))
				{
					this.Onidentify_numberChanging(value);
					this.SendPropertyChanging();
					this._identify_number = value;
					this.SendPropertyChanged("identify_number");
					this.Onidentify_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(2)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degree", DbType="VarChar(10)")]
		public string degree
		{
			get
			{
				return this._degree;
			}
			set
			{
				if ((this._degree != value))
				{
					this.OndegreeChanging(value);
					this.SendPropertyChanging();
					this._degree = value;
					this.SendPropertyChanged("degree");
					this.OndegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="Int")]
		public System.Nullable<int> department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_household", DbType="VarChar(100)")]
		public string household
		{
			get
			{
				return this._household;
			}
			set
			{
				if ((this._household != value))
				{
					this.OnhouseholdChanging(value);
					this.SendPropertyChanging();
					this._household = value;
					this.SendPropertyChanged("household");
					this.OnhouseholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary_type", DbType="VarChar(50)")]
		public string salary_type
		{
			get
			{
				return this._salary_type;
			}
			set
			{
				if ((this._salary_type != value))
				{
					this.Onsalary_typeChanging(value);
					this.SendPropertyChanging();
					this._salary_type = value;
					this.SendPropertyChanged("salary_type");
					this.Onsalary_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family_address", DbType="VarChar(100)")]
		public string family_address
		{
			get
			{
				return this._family_address;
			}
			set
			{
				if ((this._family_address != value))
				{
					this.Onfamily_addressChanging(value);
					this.SendPropertyChanging();
					this._family_address = value;
					this.SendPropertyChanged("family_address");
					this.Onfamily_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family_phone", DbType="VarChar(50)")]
		public string family_phone
		{
			get
			{
				return this._family_phone;
			}
			set
			{
				if ((this._family_phone != value))
				{
					this.Onfamily_phoneChanging(value);
					this.SendPropertyChanging();
					this._family_phone = value;
					this.SendPropertyChanged("family_phone");
					this.Onfamily_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family_connector", DbType="VarChar(20)")]
		public string family_connector
		{
			get
			{
				return this._family_connector;
			}
			set
			{
				if ((this._family_connector != value))
				{
					this.Onfamily_connectorChanging(value);
					this.SendPropertyChanging();
					this._family_connector = value;
					this.SendPropertyChanged("family_connector");
					this.Onfamily_connectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary picture
		{
			get
			{
				return this._picture.Value;
			}
			set
			{
				if ((this._picture.Value != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture.Value = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_old_id", DbType="int")]
		public System.Nullable<int> old_id
		{
			get
			{
				return this._old_id;
			}
			set
			{
				if ((this._old_id != value))
				{
					this.Onold_idChanging(value);
					this.SendPropertyChanging();
					this._old_id = value;
					this.SendPropertyChanged("old_id");
					this.Onold_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identify_info", DbType="Varchar(200)")]
		public string identify_info
		{
			get
			{
				return this._identify_info;
			}
			set
			{
				if ((this._identify_info != value))
				{
					this.Onidentify_infoChanging(value);
					this.SendPropertyChanging();
					this._identify_info = value;
					this.SendPropertyChanged("identify_info");
					this.Onidentify_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Lodging", Storage="_Lodging", ThisKey="id", OtherKey="emp_id")]
		public EntitySet<Lodging> Lodging
		{
			get
			{
				return this._Lodging;
			}
			set
			{
				this._Lodging.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_OtherFee", Storage="_OtherFee", ThisKey="id", OtherKey="emp_id")]
		public EntitySet<OtherFee> OtherFee
		{
			get
			{
				return this._OtherFee;
			}
			set
			{
				this._OtherFee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TempLodging", Storage="_TempLodging", ThisKey="id", OtherKey="user_id")]
		public EntitySet<TempLodging> TempLodging
		{
			get
			{
				return this._TempLodging;
			}
			set
			{
				this._TempLodging.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_BlackList", Storage="_BlackList", ThisKey="id", OtherKey="emp_id")]
		public EntitySet<BlackList> BlackList
		{
			get
			{
				return this._BlackList;
			}
			set
			{
				this._BlackList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AutoQuit", Storage="_AutoQuit", ThisKey="id", OtherKey="emp_id")]
		public EntitySet<AutoQuit> AutoQuit
		{
			get
			{
				return this._AutoQuit;
			}
			set
			{
				this._AutoQuit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department1", ThisKey="department", OtherKey="id", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._department = value.id;
					}
					else
					{
						this._department = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lodging(Lodging entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Lodging(Lodging entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_OtherFee(OtherFee entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_OtherFee(OtherFee entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_TempLodging(TempLodging entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_TempLodging(TempLodging entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_BlackList(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_BlackList(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_AutoQuit(AutoQuit entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AutoQuit(AutoQuit entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_fuel_fee")]
	public partial class FuelFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _dorm_id;
		
		private string _year_month;
		
		private System.Nullable<double> _cold_water;
		
		private System.Nullable<double> _hot_water;
		
		private System.Nullable<double> _electricity;
		
		private string _comment;
		
		private EntityRef<Dorm> _Dorm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondorm_idChanging(System.Nullable<int> value);
    partial void Ondorm_idChanged();
    partial void Onyear_monthChanging(string value);
    partial void Onyear_monthChanged();
    partial void Oncold_waterChanging(System.Nullable<double> value);
    partial void Oncold_waterChanged();
    partial void Onhot_waterChanging(System.Nullable<double> value);
    partial void Onhot_waterChanged();
    partial void OnelectricityChanging(System.Nullable<double> value);
    partial void OnelectricityChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public FuelFee()
		{
			this._Dorm = default(EntityRef<Dorm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_id", DbType="Int")]
		public System.Nullable<int> dorm_id
		{
			get
			{
				return this._dorm_id;
			}
			set
			{
				if ((this._dorm_id != value))
				{
					if (this._Dorm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondorm_idChanging(value);
					this.SendPropertyChanging();
					this._dorm_id = value;
					this.SendPropertyChanged("dorm_id");
					this.Ondorm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_month", DbType="VarChar(50)")]
		public string year_month
		{
			get
			{
				return this._year_month;
			}
			set
			{
				if ((this._year_month != value))
				{
					this.Onyear_monthChanging(value);
					this.SendPropertyChanging();
					this._year_month = value;
					this.SendPropertyChanged("year_month");
					this.Onyear_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cold_water", DbType="Float")]
		public System.Nullable<double> cold_water
		{
			get
			{
				return this._cold_water;
			}
			set
			{
				if ((this._cold_water != value))
				{
					this.Oncold_waterChanging(value);
					this.SendPropertyChanging();
					this._cold_water = value;
					this.SendPropertyChanged("cold_water");
					this.Oncold_waterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hot_water", DbType="Float")]
		public System.Nullable<double> hot_water
		{
			get
			{
				return this._hot_water;
			}
			set
			{
				if ((this._hot_water != value))
				{
					this.Onhot_waterChanging(value);
					this.SendPropertyChanging();
					this._hot_water = value;
					this.SendPropertyChanged("hot_water");
					this.Onhot_waterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_electricity", DbType="Float")]
		public System.Nullable<double> electricity
		{
			get
			{
				return this._electricity;
			}
			set
			{
				if ((this._electricity != value))
				{
					this.OnelectricityChanging(value);
					this.SendPropertyChanging();
					this._electricity = value;
					this.SendPropertyChanged("electricity");
					this.OnelectricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="Varchar(1000)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dorm_FuelFee", Storage="_Dorm", ThisKey="dorm_id", OtherKey="id", IsForeignKey=true)]
		public Dorm Dorm
		{
			get
			{
				return this._Dorm.Entity;
			}
			set
			{
				Dorm previousValue = this._Dorm.Entity;
				if (((previousValue != value) 
							|| (this._Dorm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dorm.Entity = null;
						previousValue.FuelFee.Remove(this);
					}
					this._Dorm.Entity = value;
					if ((value != null))
					{
						value.FuelFee.Add(this);
						this._dorm_id = value.id;
					}
					else
					{
						this._dorm_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dorm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_lodging")]
	public partial class Lodging : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _dorm_id;
		
		private System.Nullable<int> _emp_id;
		
		private System.Nullable<System.DateTime> _in_date;
		
		private System.Nullable<System.DateTime> _out_date;
		
		private System.Nullable<decimal> _real_rent;
		
		private System.Nullable<decimal> _guarantee;
		
		private string _situation;
		
		private System.Nullable<decimal> _real_manage;
		
		private string _classify_property;
		
		private EntitySet<Charge> _Charge;
		
		private EntityRef<Dorm> _Dorm;
		
		private EntityRef<Employee> _Employee;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondorm_idChanging(System.Nullable<int> value);
    partial void Ondorm_idChanged();
    partial void Onemp_idChanging(System.Nullable<int> value);
    partial void Onemp_idChanged();
    partial void Onin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onin_dateChanged();
    partial void Onout_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onout_dateChanged();
    partial void Onreal_rentChanging(System.Nullable<decimal> value);
    partial void Onreal_rentChanged();
    partial void OnguaranteeChanging(System.Nullable<decimal> value);
    partial void OnguaranteeChanged();
    partial void OnsituationChanging(string value);
    partial void OnsituationChanged();
    partial void Onreal_manageChanging(System.Nullable<decimal> value);
    partial void Onreal_manageChanged();
    partial void Onclassify_propertyChanging(string value);
    partial void Onclassify_propertyChanged();
    #endregion
		
		public Lodging()
		{
			this._Charge = new EntitySet<Charge>(new Action<Charge>(this.attach_Charge), new Action<Charge>(this.detach_Charge));
			this._Dorm = default(EntityRef<Dorm>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_id", DbType="Int")]
		public System.Nullable<int> dorm_id
		{
			get
			{
				return this._dorm_id;
			}
			set
			{
				if ((this._dorm_id != value))
				{
					if (this._Dorm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondorm_idChanging(value);
					this.SendPropertyChanging();
					this._dorm_id = value;
					this.SendPropertyChanged("dorm_id");
					this.Ondorm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int")]
		public System.Nullable<int> emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> in_date
		{
			get
			{
				return this._in_date;
			}
			set
			{
				if ((this._in_date != value))
				{
					this.Onin_dateChanging(value);
					this.SendPropertyChanging();
					this._in_date = value;
					this.SendPropertyChanged("in_date");
					this.Onin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> out_date
		{
			get
			{
				return this._out_date;
			}
			set
			{
				if ((this._out_date != value))
				{
					this.Onout_dateChanging(value);
					this.SendPropertyChanging();
					this._out_date = value;
					this.SendPropertyChanged("out_date");
					this.Onout_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_real_rent", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> real_rent
		{
			get
			{
				return this._real_rent;
			}
			set
			{
				if ((this._real_rent != value))
				{
					this.Onreal_rentChanging(value);
					this.SendPropertyChanging();
					this._real_rent = value;
					this.SendPropertyChanged("real_rent");
					this.Onreal_rentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guarantee", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> guarantee
		{
			get
			{
				return this._guarantee;
			}
			set
			{
				if ((this._guarantee != value))
				{
					this.OnguaranteeChanging(value);
					this.SendPropertyChanging();
					this._guarantee = value;
					this.SendPropertyChanged("guarantee");
					this.OnguaranteeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_situation", DbType="VarChar(200)")]
		public string situation
		{
			get
			{
				return this._situation;
			}
			set
			{
				if ((this._situation != value))
				{
					this.OnsituationChanging(value);
					this.SendPropertyChanging();
					this._situation = value;
					this.SendPropertyChanged("situation");
					this.OnsituationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_real_manage", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> real_manage
		{
			get
			{
				return this._real_manage;
			}
			set
			{
				if ((this._real_manage != value))
				{
					this.Onreal_manageChanging(value);
					this.SendPropertyChanging();
					this._real_manage = value;
					this.SendPropertyChanged("real_manage");
					this.Onreal_manageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classify_property", DbType="VarChar(10)")]
		public string classify_property
		{
			get
			{
				return this._classify_property;
			}
			set
			{
				if ((this._classify_property != value))
				{
					this.Onclassify_propertyChanging(value);
					this.SendPropertyChanging();
					this._classify_property = value;
					this.SendPropertyChanged("classify_property");
					this.Onclassify_propertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lodging_Charge", Storage="_Charge", ThisKey="id", OtherKey="Loding_id")]
		public EntitySet<Charge> Charge
		{
			get
			{
				return this._Charge;
			}
			set
			{
				this._Charge.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dorm_Lodging", Storage="_Dorm", ThisKey="dorm_id", OtherKey="id", IsForeignKey=true)]
		public Dorm Dorm
		{
			get
			{
				return this._Dorm.Entity;
			}
			set
			{
				Dorm previousValue = this._Dorm.Entity;
				if (((previousValue != value) 
							|| (this._Dorm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dorm.Entity = null;
						previousValue.Lodging.Remove(this);
					}
					this._Dorm.Entity = value;
					if ((value != null))
					{
						value.Lodging.Add(this);
						this._dorm_id = value.id;
					}
					else
					{
						this._dorm_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dorm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Lodging", Storage="_Employee", ThisKey="emp_id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Lodging.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Lodging.Add(this);
						this._emp_id = value.id;
					}
					else
					{
						this._emp_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Charge(Charge entity)
		{
			this.SendPropertyChanging();
			entity.Lodging = this;
		}
		
		private void detach_Charge(Charge entity)
		{
			this.SendPropertyChanging();
			entity.Lodging = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_other_fee")]
	public partial class OtherFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _emp_id;
		
		private System.Nullable<int> _dorm_id;
		
		private string _year_month;
		
		private System.Nullable<decimal> _repair_cost;
		
		private System.Nullable<decimal> _fine;
		
		private System.Nullable<decimal> _guesthouse_cost;
		
		private System.Nullable<decimal> _other_cost;
		
		private System.Nullable<decimal> _out_share_water;
		
		private System.Nullable<decimal> _out_share_eletricity;
		
		private string _comment;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<Dorm> _Dorm;
		
		private EntityRef<Employee> _Employee;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onemp_idChanging(System.Nullable<int> value);
    partial void Onemp_idChanged();
    partial void Ondorm_idChanging(System.Nullable<int> value);
    partial void Ondorm_idChanged();
    partial void Onyear_monthChanging(string value);
    partial void Onyear_monthChanged();
    partial void Onrepair_costChanging(System.Nullable<decimal> value);
    partial void Onrepair_costChanged();
    partial void OnfineChanging(System.Nullable<decimal> value);
    partial void OnfineChanged();
    partial void Onguesthouse_costChanging(System.Nullable<decimal> value);
    partial void Onguesthouse_costChanged();
    partial void Onother_costChanging(System.Nullable<decimal> value);
    partial void Onother_costChanged();
    partial void Onout_share_waterChanging(System.Nullable<decimal> value);
    partial void Onout_share_waterChanged();
    partial void Onout_share_eletricityChanging(System.Nullable<decimal> value);
    partial void Onout_share_eletricityChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public OtherFee()
		{
			this._Dorm = default(EntityRef<Dorm>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int")]
		public System.Nullable<int> emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_id", DbType="Int")]
		public System.Nullable<int> dorm_id
		{
			get
			{
				return this._dorm_id;
			}
			set
			{
				if ((this._dorm_id != value))
				{
					if (this._Dorm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondorm_idChanging(value);
					this.SendPropertyChanging();
					this._dorm_id = value;
					this.SendPropertyChanged("dorm_id");
					this.Ondorm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_month", DbType="VarChar(50)")]
		public string year_month
		{
			get
			{
				return this._year_month;
			}
			set
			{
				if ((this._year_month != value))
				{
					this.Onyear_monthChanging(value);
					this.SendPropertyChanging();
					this._year_month = value;
					this.SendPropertyChanged("year_month");
					this.Onyear_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repair_cost", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> repair_cost
		{
			get
			{
				return this._repair_cost;
			}
			set
			{
				if ((this._repair_cost != value))
				{
					this.Onrepair_costChanging(value);
					this.SendPropertyChanging();
					this._repair_cost = value;
					this.SendPropertyChanged("repair_cost");
					this.Onrepair_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> fine
		{
			get
			{
				return this._fine;
			}
			set
			{
				if ((this._fine != value))
				{
					this.OnfineChanging(value);
					this.SendPropertyChanging();
					this._fine = value;
					this.SendPropertyChanged("fine");
					this.OnfineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guesthouse_cost", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> guesthouse_cost
		{
			get
			{
				return this._guesthouse_cost;
			}
			set
			{
				if ((this._guesthouse_cost != value))
				{
					this.Onguesthouse_costChanging(value);
					this.SendPropertyChanging();
					this._guesthouse_cost = value;
					this.SendPropertyChanged("guesthouse_cost");
					this.Onguesthouse_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other_cost", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> other_cost
		{
			get
			{
				return this._other_cost;
			}
			set
			{
				if ((this._other_cost != value))
				{
					this.Onother_costChanging(value);
					this.SendPropertyChanging();
					this._other_cost = value;
					this.SendPropertyChanged("other_cost");
					this.Onother_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_share_water", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> out_share_water
		{
			get
			{
				return this._out_share_water;
			}
			set
			{
				if ((this._out_share_water != value))
				{
					this.Onout_share_waterChanging(value);
					this.SendPropertyChanging();
					this._out_share_water = value;
					this.SendPropertyChanged("out_share_water");
					this.Onout_share_waterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_share_eletricity", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> out_share_eletricity
		{
			get
			{
				return this._out_share_eletricity;
			}
			set
			{
				if ((this._out_share_eletricity != value))
				{
					this.Onout_share_eletricityChanging(value);
					this.SendPropertyChanging();
					this._out_share_eletricity = value;
					this.SendPropertyChanged("out_share_eletricity");
					this.Onout_share_eletricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dorm_OtherFee", Storage="_Dorm", ThisKey="dorm_id", OtherKey="id", IsForeignKey=true)]
		public Dorm Dorm
		{
			get
			{
				return this._Dorm.Entity;
			}
			set
			{
				Dorm previousValue = this._Dorm.Entity;
				if (((previousValue != value) 
							|| (this._Dorm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dorm.Entity = null;
						previousValue.OtherFee.Remove(this);
					}
					this._Dorm.Entity = value;
					if ((value != null))
					{
						value.OtherFee.Add(this);
						this._dorm_id = value.id;
					}
					else
					{
						this._dorm_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dorm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_OtherFee", Storage="_Employee", ThisKey="emp_id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.OtherFee.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.OtherFee.Add(this);
						this._emp_id = value.id;
					}
					else
					{
						this._emp_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_type")]
	public partial class DormType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<double> _area;
		
		private System.Nullable<decimal> _rent;
		
		private System.Nullable<decimal> _manage_cost;
		
		private string _charge_mode;
		
		private System.Nullable<short> _max_number;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntitySet<Dorm> _Dorm;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnareaChanging(System.Nullable<double> value);
    partial void OnareaChanged();
    partial void OnrentChanging(System.Nullable<decimal> value);
    partial void OnrentChanged();
    partial void Onmanage_costChanging(System.Nullable<decimal> value);
    partial void Onmanage_costChanged();
    partial void Oncharge_modeChanging(string value);
    partial void Oncharge_modeChanged();
    partial void Onmax_numberChanging(System.Nullable<short> value);
    partial void Onmax_numberChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public DormType()
		{
			this._Dorm = new EntitySet<Dorm>(new Action<Dorm>(this.attach_Dorm), new Action<Dorm>(this.detach_Dorm));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="Float")]
		public System.Nullable<double> area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnareaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("area");
					this.OnareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rent", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> rent
		{
			get
			{
				return this._rent;
			}
			set
			{
				if ((this._rent != value))
				{
					this.OnrentChanging(value);
					this.SendPropertyChanging();
					this._rent = value;
					this.SendPropertyChanged("rent");
					this.OnrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manage_cost", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> manage_cost
		{
			get
			{
				return this._manage_cost;
			}
			set
			{
				if ((this._manage_cost != value))
				{
					this.Onmanage_costChanging(value);
					this.SendPropertyChanging();
					this._manage_cost = value;
					this.SendPropertyChanged("manage_cost");
					this.Onmanage_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charge_mode", DbType="VarChar(20)")]
		public string charge_mode
		{
			get
			{
				return this._charge_mode;
			}
			set
			{
				if ((this._charge_mode != value))
				{
					this.Oncharge_modeChanging(value);
					this.SendPropertyChanging();
					this._charge_mode = value;
					this.SendPropertyChanged("charge_mode");
					this.Oncharge_modeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_number", DbType="SmallInt")]
		public System.Nullable<short> max_number
		{
			get
			{
				return this._max_number;
			}
			set
			{
				if ((this._max_number != value))
				{
					this.Onmax_numberChanging(value);
					this.SendPropertyChanging();
					this._max_number = value;
					this.SendPropertyChanged("max_number");
					this.Onmax_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DormType_Dorm", Storage="_Dorm", ThisKey="id", OtherKey="type_id")]
		public EntitySet<Dorm> Dorm
		{
			get
			{
				return this._Dorm;
			}
			set
			{
				this._Dorm.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dorm(Dorm entity)
		{
			this.SendPropertyChanging();
			entity.DormType = this;
		}
		
		private void detach_Dorm(Dorm entity)
		{
			this.SendPropertyChanging();
			entity.DormType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_temp_lodging")]
	public partial class TempLodging : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<Employee> _Employee;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public TempLodging()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TempLodging", Storage="_Employee", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.TempLodging.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.TempLodging.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_verify_order")]
	public partial class VerifyOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<short> _can_export;
		
		private System.Nullable<short> _is_verify;
		
		private string _year_and_month;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncan_exportChanging(System.Nullable<short> value);
    partial void Oncan_exportChanged();
    partial void Onis_verifyChanging(System.Nullable<short> value);
    partial void Onis_verifyChanged();
    partial void Onyear_and_monthChanging(string value);
    partial void Onyear_and_monthChanged();
    #endregion
		
		public VerifyOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_can_export", DbType="SmallInt")]
		public System.Nullable<short> can_export
		{
			get
			{
				return this._can_export;
			}
			set
			{
				if ((this._can_export != value))
				{
					this.Oncan_exportChanging(value);
					this.SendPropertyChanging();
					this._can_export = value;
					this.SendPropertyChanged("can_export");
					this.Oncan_exportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_verify", DbType="SmallInt")]
		public System.Nullable<short> is_verify
		{
			get
			{
				return this._is_verify;
			}
			set
			{
				if ((this._is_verify != value))
				{
					this.Onis_verifyChanging(value);
					this.SendPropertyChanging();
					this._is_verify = value;
					this.SendPropertyChanged("is_verify");
					this.Onis_verifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_and_month", DbType="VarChar(50)")]
		public string year_and_month
		{
			get
			{
				return this._year_and_month;
			}
			set
			{
				if ((this._year_and_month != value))
				{
					this.Onyear_and_monthChanging(value);
					this.SendPropertyChanging();
					this._year_and_month = value;
					this.SendPropertyChanged("year_and_month");
					this.Onyear_and_monthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_charge")]
	public partial class Charge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _area_id;
		
		private System.Nullable<int> _department_id;
		
		private string _department;
		
		private string _area;
		
		private string _employee;
		
		private string _dorm_number;
		
		private System.Nullable<decimal> _rent;
		
		private System.Nullable<decimal> _water;
		
		private System.Nullable<decimal> _electricity;
		
		private System.Nullable<decimal> _management;
		
		private System.Nullable<decimal> _repair;
		
		private System.Nullable<decimal> _fine;
		
		private System.Nullable<decimal> _guesthouse;
		
		private System.Nullable<decimal> _guarantee;
		
		private System.Nullable<decimal> _others;
		
		private string _classify_property;
		
		private string _comment;
		
		private string _year_month;
		
		private System.Nullable<decimal> _total;
		
		private string _account;
		
		private string _property;
		
		private System.Nullable<int> _Loding_id;
		
		private string _dorm_order;
		
		private System.Nullable<bool> _can_import;
		
		private EntityRef<Area> _Area1;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<Lodging> _Lodging;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onarea_idChanging(System.Nullable<int> value);
    partial void Onarea_idChanged();
    partial void Ondepartment_idChanging(System.Nullable<int> value);
    partial void Ondepartment_idChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    partial void OnareaChanging(string value);
    partial void OnareaChanged();
    partial void OnemployeeChanging(string value);
    partial void OnemployeeChanged();
    partial void Ondorm_numberChanging(string value);
    partial void Ondorm_numberChanged();
    partial void OnrentChanging(System.Nullable<decimal> value);
    partial void OnrentChanged();
    partial void OnwaterChanging(System.Nullable<decimal> value);
    partial void OnwaterChanged();
    partial void OnelectricityChanging(System.Nullable<decimal> value);
    partial void OnelectricityChanged();
    partial void OnmanagementChanging(System.Nullable<decimal> value);
    partial void OnmanagementChanged();
    partial void OnrepairChanging(System.Nullable<decimal> value);
    partial void OnrepairChanged();
    partial void OnfineChanging(System.Nullable<decimal> value);
    partial void OnfineChanged();
    partial void OnguesthouseChanging(System.Nullable<decimal> value);
    partial void OnguesthouseChanged();
    partial void OnguaranteeChanging(System.Nullable<decimal> value);
    partial void OnguaranteeChanged();
    partial void OnothersChanging(System.Nullable<decimal> value);
    partial void OnothersChanged();
    partial void Onclassify_propertyChanging(string value);
    partial void Onclassify_propertyChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void Onyear_monthChanging(string value);
    partial void Onyear_monthChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void OnpropertyChanging(string value);
    partial void OnpropertyChanged();
    partial void OnLoding_idChanging(System.Nullable<int> value);
    partial void OnLoding_idChanged();
    partial void Ondorm_orderChanging(string value);
    partial void Ondorm_orderChanged();
    partial void Oncan_importChanging(System.Nullable<bool> value);
    partial void Oncan_importChanged();
    #endregion
		
		public Charge()
		{
			this._Area1 = default(EntityRef<Area>);
			this._Department1 = default(EntityRef<Department>);
			this._Lodging = default(EntityRef<Lodging>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area_id", DbType="Int")]
		public System.Nullable<int> area_id
		{
			get
			{
				return this._area_id;
			}
			set
			{
				if ((this._area_id != value))
				{
					if (this._Area1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onarea_idChanging(value);
					this.SendPropertyChanging();
					this._area_id = value;
					this.SendPropertyChanged("area_id");
					this.Onarea_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="Int")]
		public System.Nullable<int> department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="VarChar(40)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="VarChar(10)")]
		public string area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnareaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("area");
					this.OnareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee", DbType="VarChar(40)")]
		public string employee
		{
			get
			{
				return this._employee;
			}
			set
			{
				if ((this._employee != value))
				{
					this.OnemployeeChanging(value);
					this.SendPropertyChanging();
					this._employee = value;
					this.SendPropertyChanged("employee");
					this.OnemployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_number", DbType="VarChar(50)")]
		public string dorm_number
		{
			get
			{
				return this._dorm_number;
			}
			set
			{
				if ((this._dorm_number != value))
				{
					this.Ondorm_numberChanging(value);
					this.SendPropertyChanging();
					this._dorm_number = value;
					this.SendPropertyChanged("dorm_number");
					this.Ondorm_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rent", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> rent
		{
			get
			{
				return this._rent;
			}
			set
			{
				if ((this._rent != value))
				{
					this.OnrentChanging(value);
					this.SendPropertyChanging();
					this._rent = value;
					this.SendPropertyChanged("rent");
					this.OnrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_water", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> water
		{
			get
			{
				return this._water;
			}
			set
			{
				if ((this._water != value))
				{
					this.OnwaterChanging(value);
					this.SendPropertyChanging();
					this._water = value;
					this.SendPropertyChanged("water");
					this.OnwaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_electricity", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> electricity
		{
			get
			{
				return this._electricity;
			}
			set
			{
				if ((this._electricity != value))
				{
					this.OnelectricityChanging(value);
					this.SendPropertyChanging();
					this._electricity = value;
					this.SendPropertyChanged("electricity");
					this.OnelectricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_management", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> management
		{
			get
			{
				return this._management;
			}
			set
			{
				if ((this._management != value))
				{
					this.OnmanagementChanging(value);
					this.SendPropertyChanging();
					this._management = value;
					this.SendPropertyChanged("management");
					this.OnmanagementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repair", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> repair
		{
			get
			{
				return this._repair;
			}
			set
			{
				if ((this._repair != value))
				{
					this.OnrepairChanging(value);
					this.SendPropertyChanging();
					this._repair = value;
					this.SendPropertyChanged("repair");
					this.OnrepairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> fine
		{
			get
			{
				return this._fine;
			}
			set
			{
				if ((this._fine != value))
				{
					this.OnfineChanging(value);
					this.SendPropertyChanging();
					this._fine = value;
					this.SendPropertyChanged("fine");
					this.OnfineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guesthouse", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> guesthouse
		{
			get
			{
				return this._guesthouse;
			}
			set
			{
				if ((this._guesthouse != value))
				{
					this.OnguesthouseChanging(value);
					this.SendPropertyChanging();
					this._guesthouse = value;
					this.SendPropertyChanged("guesthouse");
					this.OnguesthouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guarantee", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> guarantee
		{
			get
			{
				return this._guarantee;
			}
			set
			{
				if ((this._guarantee != value))
				{
					this.OnguaranteeChanging(value);
					this.SendPropertyChanging();
					this._guarantee = value;
					this.SendPropertyChanged("guarantee");
					this.OnguaranteeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> others
		{
			get
			{
				return this._others;
			}
			set
			{
				if ((this._others != value))
				{
					this.OnothersChanging(value);
					this.SendPropertyChanging();
					this._others = value;
					this.SendPropertyChanged("others");
					this.OnothersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classify_property", DbType="VarChar(50)")]
		public string classify_property
		{
			get
			{
				return this._classify_property;
			}
			set
			{
				if ((this._classify_property != value))
				{
					this.Onclassify_propertyChanging(value);
					this.SendPropertyChanging();
					this._classify_property = value;
					this.SendPropertyChanged("classify_property");
					this.Onclassify_propertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_month", DbType="VarChar(50)")]
		public string year_month
		{
			get
			{
				return this._year_month;
			}
			set
			{
				if ((this._year_month != value))
				{
					this.Onyear_monthChanging(value);
					this.SendPropertyChanging();
					this._year_month = value;
					this.SendPropertyChanged("year_month");
					this.Onyear_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="VarChar(10)")]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_property", DbType="VarChar(10)")]
		public string property
		{
			get
			{
				return this._property;
			}
			set
			{
				if ((this._property != value))
				{
					this.OnpropertyChanging(value);
					this.SendPropertyChanging();
					this._property = value;
					this.SendPropertyChanged("property");
					this.OnpropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lodging_id", Storage="_Loding_id", DbType="int")]
		public System.Nullable<int> Loding_id
		{
			get
			{
				return this._Loding_id;
			}
			set
			{
				if ((this._Loding_id != value))
				{
					this.OnLoding_idChanging(value);
					this.SendPropertyChanging();
					this._Loding_id = value;
					this.SendPropertyChanged("Loding_id");
					this.OnLoding_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_order", DbType="VarChar(50)")]
		public string dorm_order
		{
			get
			{
				return this._dorm_order;
			}
			set
			{
				if ((this._dorm_order != value))
				{
					this.Ondorm_orderChanging(value);
					this.SendPropertyChanging();
					this._dorm_order = value;
					this.SendPropertyChanged("dorm_order");
					this.Ondorm_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_can_import", DbType="bit")]
		public System.Nullable<bool> can_import
		{
			get
			{
				return this._can_import;
			}
			set
			{
				if ((this._can_import != value))
				{
					this.Oncan_importChanging(value);
					this.SendPropertyChanging();
					this._can_import = value;
					this.SendPropertyChanged("can_import");
					this.Oncan_importChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Charge", Storage="_Area1", ThisKey="area_id", OtherKey="id", IsForeignKey=true)]
		public Area Area1
		{
			get
			{
				return this._Area1.Entity;
			}
			set
			{
				Area previousValue = this._Area1.Entity;
				if (((previousValue != value) 
							|| (this._Area1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area1.Entity = null;
						previousValue.Charge.Remove(this);
					}
					this._Area1.Entity = value;
					if ((value != null))
					{
						value.Charge.Add(this);
						this._area_id = value.id;
					}
					else
					{
						this._area_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Area1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Charge", Storage="_Department1", ThisKey="department_id", OtherKey="id", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Charge.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Charge.Add(this);
						this._department_id = value.id;
					}
					else
					{
						this._department_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lodging_Charge", Storage="_Lodging", ThisKey="Loding_id", OtherKey="id", IsForeignKey=true)]
		public Lodging Lodging
		{
			get
			{
				return this._Lodging.Entity;
			}
			set
			{
				Lodging previousValue = this._Lodging.Entity;
				if (((previousValue != value) 
							|| (this._Lodging.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lodging.Entity = null;
						previousValue.Charge.Remove(this);
					}
					this._Lodging.Entity = value;
					if ((value != null))
					{
						value.Charge.Add(this);
						this._Loding_id = value.id;
					}
					else
					{
						this._Loding_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lodging");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_black_list")]
	public partial class BlackList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _emp_id;
		
		private System.Nullable<System.DateTime> _in_date;
		
		private string _in_reason;
		
		private string _in_operator;
		
		private System.Nullable<System.DateTime> _out_date;
		
		private string _out_reason;
		
		private string _out_operator;
		
		private EntityRef<Employee> _Employee;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onemp_idChanging(int value);
    partial void Onemp_idChanged();
    partial void Onin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onin_dateChanged();
    partial void Onin_reasonChanging(string value);
    partial void Onin_reasonChanged();
    partial void Onin_operatorChanging(string value);
    partial void Onin_operatorChanged();
    partial void Onout_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onout_dateChanged();
    partial void Onout_reasonChanging(string value);
    partial void Onout_reasonChanged();
    partial void Onout_operatorChanging(string value);
    partial void Onout_operatorChanged();
    #endregion
		
		public BlackList()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int NOT NULL")]
		public int emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> in_date
		{
			get
			{
				return this._in_date;
			}
			set
			{
				if ((this._in_date != value))
				{
					this.Onin_dateChanging(value);
					this.SendPropertyChanging();
					this._in_date = value;
					this.SendPropertyChanged("in_date");
					this.Onin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_reason", DbType="VarChar(200)")]
		public string in_reason
		{
			get
			{
				return this._in_reason;
			}
			set
			{
				if ((this._in_reason != value))
				{
					this.Onin_reasonChanging(value);
					this.SendPropertyChanging();
					this._in_reason = value;
					this.SendPropertyChanged("in_reason");
					this.Onin_reasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_operator", DbType="VarChar(20)")]
		public string in_operator
		{
			get
			{
				return this._in_operator;
			}
			set
			{
				if ((this._in_operator != value))
				{
					this.Onin_operatorChanging(value);
					this.SendPropertyChanging();
					this._in_operator = value;
					this.SendPropertyChanged("in_operator");
					this.Onin_operatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> out_date
		{
			get
			{
				return this._out_date;
			}
			set
			{
				if ((this._out_date != value))
				{
					this.Onout_dateChanging(value);
					this.SendPropertyChanging();
					this._out_date = value;
					this.SendPropertyChanged("out_date");
					this.Onout_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_reason", DbType="VarChar(200)")]
		public string out_reason
		{
			get
			{
				return this._out_reason;
			}
			set
			{
				if ((this._out_reason != value))
				{
					this.Onout_reasonChanging(value);
					this.SendPropertyChanging();
					this._out_reason = value;
					this.SendPropertyChanged("out_reason");
					this.Onout_reasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_operator", DbType="VarChar(20)")]
		public string out_operator
		{
			get
			{
				return this._out_operator;
			}
			set
			{
				if ((this._out_operator != value))
				{
					this.Onout_operatorChanging(value);
					this.SendPropertyChanging();
					this._out_operator = value;
					this.SendPropertyChanged("out_operator");
					this.Onout_operatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_BlackList", Storage="_Employee", ThisKey="emp_id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.BlackList.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.BlackList.Add(this);
						this._emp_id = value.id;
					}
					else
					{
						this._emp_id = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_auto_quit")]
	public partial class AutoQuit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _dorm_id;
		
		private System.Nullable<int> _emp_id;
		
		private System.Nullable<System.DateTime> _in_date;
		
		private System.Nullable<System.DateTime> _out_date;
		
		private string _comment;
		
		private EntityRef<Dorm> _Dorm;
		
		private EntityRef<Employee> _Employee;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondorm_idChanging(System.Nullable<int> value);
    partial void Ondorm_idChanged();
    partial void Onemp_idChanging(System.Nullable<int> value);
    partial void Onemp_idChanged();
    partial void Onin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onin_dateChanged();
    partial void Onout_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onout_dateChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public AutoQuit()
		{
			this._Dorm = default(EntityRef<Dorm>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_id", DbType="Int")]
		public System.Nullable<int> dorm_id
		{
			get
			{
				return this._dorm_id;
			}
			set
			{
				if ((this._dorm_id != value))
				{
					if (this._Dorm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondorm_idChanging(value);
					this.SendPropertyChanging();
					this._dorm_id = value;
					this.SendPropertyChanged("dorm_id");
					this.Ondorm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int")]
		public System.Nullable<int> emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> in_date
		{
			get
			{
				return this._in_date;
			}
			set
			{
				if ((this._in_date != value))
				{
					this.Onin_dateChanging(value);
					this.SendPropertyChanging();
					this._in_date = value;
					this.SendPropertyChanged("in_date");
					this.Onin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> out_date
		{
			get
			{
				return this._out_date;
			}
			set
			{
				if ((this._out_date != value))
				{
					this.Onout_dateChanging(value);
					this.SendPropertyChanging();
					this._out_date = value;
					this.SendPropertyChanged("out_date");
					this.Onout_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(100)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dorm_AutoQuit", Storage="_Dorm", ThisKey="dorm_id", OtherKey="id", IsForeignKey=true)]
		public Dorm Dorm
		{
			get
			{
				return this._Dorm.Entity;
			}
			set
			{
				Dorm previousValue = this._Dorm.Entity;
				if (((previousValue != value) 
							|| (this._Dorm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dorm.Entity = null;
						previousValue.AutoQuit.Remove(this);
					}
					this._Dorm.Entity = value;
					if ((value != null))
					{
						value.AutoQuit.Add(this);
						this._dorm_id = value.id;
					}
					else
					{
						this._dorm_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dorm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AutoQuit", Storage="_Employee", ThisKey="emp_id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AutoQuit.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AutoQuit.Add(this);
						this._emp_id = value.id;
					}
					else
					{
						this._emp_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_login_log")]
	public partial class LoginLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _area;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnareaChanging(string value);
    partial void OnareaChanged();
    #endregion
		
		public LoginLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="VarChar(20)")]
		public string area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnareaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("area");
					this.OnareaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_dorms_changed")]
	public partial class VwDormsChanged
	{
		
		private string _区号;
		
		private string _房号;
		
		private string _性别;
		
		private string _姓名;
		
		private string _账号;
		
		private string _年月份;
		
		private string _入住日期;
		
		private string _退宿日期;
		
		private string _备注;
		
		public VwDormsChanged()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_区号", DbType="VarChar(10)")]
		public string 区号
		{
			get
			{
				return this._区号;
			}
			set
			{
				if ((this._区号 != value))
				{
					this._区号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_房号", DbType="VarChar(50)")]
		public string 房号
		{
			get
			{
				return this._房号;
			}
			set
			{
				if ((this._房号 != value))
				{
					this._房号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_性别", DbType="VarChar(40)")]
		public string 部门
		{
			get
			{
				return this._性别;
			}
			set
			{
				if ((this._性别 != value))
				{
					this._性别 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_姓名", DbType="VarChar(40)")]
		public string 姓名
		{
			get
			{
				return this._姓名;
			}
			set
			{
				if ((this._姓名 != value))
				{
					this._姓名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_账号", DbType="VarChar(50)")]
		public string 账号
		{
			get
			{
				return this._账号;
			}
			set
			{
				if ((this._账号 != value))
				{
					this._账号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_年月份", DbType="VarChar(50)")]
		public string 年月份
		{
			get
			{
				return this._年月份;
			}
			set
			{
				if ((this._年月份 != value))
				{
					this._年月份 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_入住日期", DbType="VarChar(20)")]
		public string 入住日期
		{
			get
			{
				return this._入住日期;
			}
			set
			{
				if ((this._入住日期 != value))
				{
					this._入住日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_退宿日期", DbType="VarChar(20)")]
		public string 退宿日期
		{
			get
			{
				return this._退宿日期;
			}
			set
			{
				if ((this._退宿日期 != value))
				{
					this._退宿日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_备注", DbType="VarChar(200)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_apply")]
	public partial class Apply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _card_number;
		
		private string _dorm_type;
		
		private string _comment;
		
		private System.Nullable<System.DateTime> _apply_time;
		
		private System.Nullable<System.DateTime> _finish_time;
		
		private string _phone;
		
		private string _department;
		
		private System.Nullable<bool> _checked;
		
		private System.Nullable<System.DateTime> _handle_time;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncard_numberChanging(string value);
    partial void Oncard_numberChanged();
    partial void Ondorm_typeChanging(string value);
    partial void Ondorm_typeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void Onapply_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onapply_timeChanged();
    partial void Onfinish_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onfinish_timeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    partial void OncheckedChanging(System.Nullable<bool> value);
    partial void OncheckedChanged();
    partial void Onhandle_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onhandle_timeChanged();
    #endregion
		
		public Apply()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_number", DbType="VarChar(20)")]
		public string card_number
		{
			get
			{
				return this._card_number;
			}
			set
			{
				if ((this._card_number != value))
				{
					this.Oncard_numberChanging(value);
					this.SendPropertyChanging();
					this._card_number = value;
					this.SendPropertyChanged("card_number");
					this.Oncard_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_type", DbType="VarChar(20)")]
		public string dorm_type
		{
			get
			{
				return this._dorm_type;
			}
			set
			{
				if ((this._dorm_type != value))
				{
					this.Ondorm_typeChanging(value);
					this.SendPropertyChanging();
					this._dorm_type = value;
					this.SendPropertyChanged("dorm_type");
					this.Ondorm_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apply_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> apply_time
		{
			get
			{
				return this._apply_time;
			}
			set
			{
				if ((this._apply_time != value))
				{
					this.Onapply_timeChanging(value);
					this.SendPropertyChanging();
					this._apply_time = value;
					this.SendPropertyChanged("apply_time");
					this.Onapply_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finish_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> finish_time
		{
			get
			{
				return this._finish_time;
			}
			set
			{
				if ((this._finish_time != value))
				{
					this.Onfinish_timeChanging(value);
					this.SendPropertyChanging();
					this._finish_time = value;
					this.SendPropertyChanged("finish_time");
					this.Onfinish_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="VarChar(60)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="checked", Storage="_checked", DbType="Bit")]
		public System.Nullable<bool> @checked
		{
			get
			{
				return this._checked;
			}
			set
			{
				if ((this._checked != value))
				{
					this.OncheckedChanging(value);
					this.SendPropertyChanging();
					this._checked = value;
					this.SendPropertyChanged("@checked");
					this.OncheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handle_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> handle_time
		{
			get
			{
				return this._handle_time;
			}
			set
			{
				if ((this._handle_time != value))
				{
					this.Onhandle_timeChanging(value);
					this.SendPropertyChanging();
					this._handle_time = value;
					this.SendPropertyChanged("handle_time");
					this.Onhandle_timeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_authority")]
	public partial class Authority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private string _operate_area;
		
		private string _check_area;
		
		private System.Nullable<short> _is_admin;
		
		private EntityRef<User> _User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onoperate_areaChanging(string value);
    partial void Onoperate_areaChanged();
    partial void Oncheck_areaChanging(string value);
    partial void Oncheck_areaChanged();
    partial void Onis_adminChanging(System.Nullable<short> value);
    partial void Onis_adminChanged();
    #endregion
		
		public Authority()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="operate_area_id", Storage="_operate_area", DbType="VarChar(100)")]
		public string operate_area
		{
			get
			{
				return this._operate_area;
			}
			set
			{
				if ((this._operate_area != value))
				{
					this.Onoperate_areaChanging(value);
					this.SendPropertyChanging();
					this._operate_area = value;
					this.SendPropertyChanged("operate_area");
					this.Onoperate_areaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="check_area_id", Storage="_check_area", DbType="VarChar(100)")]
		public string check_area
		{
			get
			{
				return this._check_area;
			}
			set
			{
				if ((this._check_area != value))
				{
					this.Oncheck_areaChanging(value);
					this.SendPropertyChanging();
					this._check_area = value;
					this.SendPropertyChanged("check_area");
					this.Oncheck_areaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_admin", DbType="SmallInt")]
		public System.Nullable<short> is_admin
		{
			get
			{
				return this._is_admin;
			}
			set
			{
				if ((this._is_admin != value))
				{
					this.Onis_adminChanging(value);
					this.SendPropertyChanging();
					this._is_admin = value;
					this.SendPropertyChanged("is_admin");
					this.Onis_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Authority", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Authority.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Authority.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_dep_map")]
	public partial class DepMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mi_dep;
		
		private string _ac_dep;
		
		private System.Nullable<int> _qty;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmi_depChanging(string value);
    partial void Onmi_depChanged();
    partial void Onac_depChanging(string value);
    partial void Onac_depChanged();
    partial void OnqtyChanging(System.Nullable<int> value);
    partial void OnqtyChanged();
    #endregion
		
		public DepMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mi_dep", DbType="VarChar(100)")]
		public string mi_dep
		{
			get
			{
				return this._mi_dep;
			}
			set
			{
				if ((this._mi_dep != value))
				{
					this.Onmi_depChanging(value);
					this.SendPropertyChanging();
					this._mi_dep = value;
					this.SendPropertyChanged("mi_dep");
					this.Onmi_depChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ac_dep", DbType="VarChar(100)")]
		public string ac_dep
		{
			get
			{
				return this._ac_dep;
			}
			set
			{
				if ((this._ac_dep != value))
				{
					this.Onac_depChanging(value);
					this.SendPropertyChanging();
					this._ac_dep = value;
					this.SendPropertyChanged("ac_dep");
					this.Onac_depChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int")]
		public System.Nullable<int> qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_import_log")]
	public partial class ImportLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _year_month;
		
		private string _operator;
		
		private System.Nullable<System.DateTime> _op_time;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onyear_monthChanging(string value);
    partial void Onyear_monthChanged();
    partial void OnoperatorChanging(string value);
    partial void OnoperatorChanged();
    partial void Onop_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onop_timeChanged();
    #endregion
		
		public ImportLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_month", DbType="VarChar(10)")]
		public string year_month
		{
			get
			{
				return this._year_month;
			}
			set
			{
				if ((this._year_month != value))
				{
					this.Onyear_monthChanging(value);
					this.SendPropertyChanging();
					this._year_month = value;
					this.SendPropertyChanged("year_month");
					this.Onyear_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="operator", Storage="_operator", DbType="VarChar(50)")]
		public string @operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this.OnoperatorChanging(value);
					this.SendPropertyChanging();
					this._operator = value;
					this.SendPropertyChanged("@operator");
					this.OnoperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_op_time", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> op_time
		{
			get
			{
				return this._op_time;
			}
			set
			{
				if ((this._op_time != value))
				{
					this.Onop_timeChanging(value);
					this.SendPropertyChanging();
					this._op_time = value;
					this.SendPropertyChanged("op_time");
					this.Onop_timeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwGetSalaryDepByAccount")]
	public partial class VwGetSalaryDepByAccount
	{
		
		private decimal _zh;
		
		private string _bmmc;
		
		public VwGetSalaryDepByAccount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zh", DbType="Decimal(10,0) NOT NULL")]
		public decimal zh
		{
			get
			{
				return this._zh;
			}
			set
			{
				if ((this._zh != value))
				{
					this._zh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bmmc", DbType="NVarChar(255)")]
		public string bmmc
		{
			get
			{
				return this._bmmc;
			}
			set
			{
				if ((this._bmmc != value))
				{
					this._bmmc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_fail_import")]
	public partial class VwFailImport
	{
		
		private string _year_month;
		
		private string _department;
		
		private string _account;
		
		private string _employee;
		
		private System.Nullable<decimal> _total;
		
		private string _status;
		
		private string _dorm_number;
		
		public VwFailImport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_month", DbType="VarChar(50)")]
		public string year_month
		{
			get
			{
				return this._year_month;
			}
			set
			{
				if ((this._year_month != value))
				{
					this._year_month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="VarChar(40)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this._department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="VarChar(50)")]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this._account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee", DbType="VarChar(40)")]
		public string employee
		{
			get
			{
				return this._employee;
			}
			set
			{
				if ((this._employee != value))
				{
					this._employee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this._total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(400)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_number", DbType="VarChar(50)")]
		public string dorm_number
		{
			get
			{
				return this._dorm_number;
			}
			set
			{
				if ((this._dorm_number != value))
				{
					this._dorm_number = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_change_dep_log")]
	public partial class ChangeDepLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _emp_name;
		
		private string _emp_account;
		
		private string _old_dep;
		
		private string _new_dep;
		
		private System.Nullable<System.DateTime> _modify_date;
		
		private string _modify_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onemp_nameChanging(string value);
    partial void Onemp_nameChanged();
    partial void Onemp_accountChanging(string value);
    partial void Onemp_accountChanged();
    partial void Onold_depChanging(string value);
    partial void Onold_depChanged();
    partial void Onnew_depChanging(string value);
    partial void Onnew_depChanged();
    partial void Onmodify_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmodify_dateChanged();
    partial void Onmodify_userChanging(string value);
    partial void Onmodify_userChanged();
    #endregion
		
		public ChangeDepLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_name", DbType="VarChar(50)")]
		public string emp_name
		{
			get
			{
				return this._emp_name;
			}
			set
			{
				if ((this._emp_name != value))
				{
					this.Onemp_nameChanging(value);
					this.SendPropertyChanging();
					this._emp_name = value;
					this.SendPropertyChanged("emp_name");
					this.Onemp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_account", DbType="VarChar(50)")]
		public string emp_account
		{
			get
			{
				return this._emp_account;
			}
			set
			{
				if ((this._emp_account != value))
				{
					this.Onemp_accountChanging(value);
					this.SendPropertyChanging();
					this._emp_account = value;
					this.SendPropertyChanged("emp_account");
					this.Onemp_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_old_dep", DbType="VarChar(50)")]
		public string old_dep
		{
			get
			{
				return this._old_dep;
			}
			set
			{
				if ((this._old_dep != value))
				{
					this.Onold_depChanging(value);
					this.SendPropertyChanging();
					this._old_dep = value;
					this.SendPropertyChanged("old_dep");
					this.Onold_depChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_new_dep", DbType="VarChar(50)")]
		public string new_dep
		{
			get
			{
				return this._new_dep;
			}
			set
			{
				if ((this._new_dep != value))
				{
					this.Onnew_depChanging(value);
					this.SendPropertyChanging();
					this._new_dep = value;
					this.SendPropertyChanged("new_dep");
					this.Onnew_depChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modify_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> modify_date
		{
			get
			{
				return this._modify_date;
			}
			set
			{
				if ((this._modify_date != value))
				{
					this.Onmodify_dateChanging(value);
					this.SendPropertyChanging();
					this._modify_date = value;
					this.SendPropertyChanged("modify_date");
					this.Onmodify_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modify_user", DbType="VarChar(50)")]
		public string modify_user
		{
			get
			{
				return this._modify_user;
			}
			set
			{
				if ((this._modify_user != value))
				{
					this.Onmodify_userChanging(value);
					this.SendPropertyChanging();
					this._modify_user = value;
					this.SendPropertyChanged("modify_user");
					this.Onmodify_userChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_event_log")]
	public partial class EventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _model;
		
		private string _area;
		
		private string _dorm;
		
		private string _emp;
		
		private string _event;
		
		private string _operator;
		
		private System.Nullable<System.DateTime> _operate_time;
		
		private System.Nullable<bool> _is_normal;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmodelChanging(string value);
    partial void OnmodelChanged();
    partial void OnareaChanging(string value);
    partial void OnareaChanged();
    partial void OndormChanging(string value);
    partial void OndormChanged();
    partial void OnempChanging(string value);
    partial void OnempChanged();
    partial void OneventChanging(string value);
    partial void OneventChanged();
    partial void OnoperatorChanging(string value);
    partial void OnoperatorChanged();
    partial void Onoperate_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onoperate_timeChanged();
    partial void Onis_normalChanging(System.Nullable<bool> value);
    partial void Onis_normalChanged();
    #endregion
		
		public EventLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model", DbType="VarChar(50)")]
		public string model
		{
			get
			{
				return this._model;
			}
			set
			{
				if ((this._model != value))
				{
					this.OnmodelChanging(value);
					this.SendPropertyChanging();
					this._model = value;
					this.SendPropertyChanged("model");
					this.OnmodelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="VarChar(10)")]
		public string area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnareaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("area");
					this.OnareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm", DbType="VarChar(10)")]
		public string dorm
		{
			get
			{
				return this._dorm;
			}
			set
			{
				if ((this._dorm != value))
				{
					this.OndormChanging(value);
					this.SendPropertyChanging();
					this._dorm = value;
					this.SendPropertyChanged("dorm");
					this.OndormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp", DbType="VarChar(50)")]
		public string emp
		{
			get
			{
				return this._emp;
			}
			set
			{
				if ((this._emp != value))
				{
					this.OnempChanging(value);
					this.SendPropertyChanging();
					this._emp = value;
					this.SendPropertyChanged("emp");
					this.OnempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="VarChar(500)")]
		public string @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					this.OneventChanging(value);
					this.SendPropertyChanging();
					this._event = value;
					this.SendPropertyChanged("@event");
					this.OneventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="operator", Storage="_operator", DbType="VarChar(20)")]
		public string @operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this.OnoperatorChanging(value);
					this.SendPropertyChanging();
					this._operator = value;
					this.SendPropertyChanged("@operator");
					this.OnoperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operate_time", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> operate_time
		{
			get
			{
				return this._operate_time;
			}
			set
			{
				if ((this._operate_time != value))
				{
					this.Onoperate_timeChanging(value);
					this.SendPropertyChanging();
					this._operate_time = value;
					this.SendPropertyChanged("operate_time");
					this.Onoperate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_normal", DbType="Bit")]
		public System.Nullable<bool> is_normal
		{
			get
			{
				return this._is_normal;
			}
			set
			{
				if ((this._is_normal != value))
				{
					this.Onis_normalChanging(value);
					this.SendPropertyChanging();
					this._is_normal = value;
					this.SendPropertyChanged("is_normal");
					this.Onis_normalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.extra_fee")]
	public partial class ExtraFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _account;
		
		private string _name;
		
		private System.Nullable<double> _fee;
		
		private string _year_month;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfeeChanging(System.Nullable<double> value);
    partial void OnfeeChanged();
    partial void Onyear_monthChanging(string value);
    partial void Onyear_monthChanged();
    #endregion
		
		public ExtraFee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="VarChar(10)")]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fee", DbType="Float")]
		public System.Nullable<double> fee
		{
			get
			{
				return this._fee;
			}
			set
			{
				if ((this._fee != value))
				{
					this.OnfeeChanging(value);
					this.SendPropertyChanging();
					this._fee = value;
					this.SendPropertyChanged("fee");
					this.OnfeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_month", DbType="VarChar(50)")]
		public string year_month
		{
			get
			{
				return this._year_month;
			}
			set
			{
				if ((this._year_month != value))
				{
					this.Onyear_monthChanging(value);
					this.SendPropertyChanging();
					this._year_month = value;
					this.SendPropertyChanged("year_month");
					this.Onyear_monthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dormitory_monthly_fee")]
	public partial class MonthlyFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _dorm_id;
		
		private System.Nullable<int> _emp_id;
		
		private string _dorm_number;
		
		private string _emp_name;
		
		private System.Nullable<decimal> _fee;
		
		private string _comment;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondorm_idChanging(System.Nullable<int> value);
    partial void Ondorm_idChanged();
    partial void Onemp_idChanging(System.Nullable<int> value);
    partial void Onemp_idChanged();
    partial void Ondorm_numberChanging(string value);
    partial void Ondorm_numberChanged();
    partial void Onemp_nameChanging(string value);
    partial void Onemp_nameChanged();
    partial void OnfeeChanging(System.Nullable<decimal> value);
    partial void OnfeeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public MonthlyFee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_id", DbType="Int")]
		public System.Nullable<int> dorm_id
		{
			get
			{
				return this._dorm_id;
			}
			set
			{
				if ((this._dorm_id != value))
				{
					this.Ondorm_idChanging(value);
					this.SendPropertyChanging();
					this._dorm_id = value;
					this.SendPropertyChanged("dorm_id");
					this.Ondorm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int")]
		public System.Nullable<int> emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_number", DbType="VarChar(20)")]
		public string dorm_number
		{
			get
			{
				return this._dorm_number;
			}
			set
			{
				if ((this._dorm_number != value))
				{
					this.Ondorm_numberChanging(value);
					this.SendPropertyChanging();
					this._dorm_number = value;
					this.SendPropertyChanged("dorm_number");
					this.Ondorm_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_name", DbType="VarChar(50)")]
		public string emp_name
		{
			get
			{
				return this._emp_name;
			}
			set
			{
				if ((this._emp_name != value))
				{
					this.Onemp_nameChanging(value);
					this.SendPropertyChanging();
					this._emp_name = value;
					this.SendPropertyChanged("emp_name");
					this.Onemp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fee", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> fee
		{
			get
			{
				return this._fee;
			}
			set
			{
				if ((this._fee != value))
				{
					this.OnfeeChanging(value);
					this.SendPropertyChanging();
					this._fee = value;
					this.SendPropertyChanged("fee");
					this.OnfeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.change_dorm_report")]
	public partial class VwChangeReport
	{
		
		private int _id;
		
		private System.Nullable<int> _area_id;
		
		private System.Nullable<int> _department_id;
		
		private System.Nullable<int> _lodging_id;
		
		private string _department;
		
		private string _area;
		
		private string _account;
		
		private string _employee;
		
		private string _dorm_number;
		
		private System.Nullable<decimal> _rent;
		
		private System.Nullable<decimal> _water;
		
		private System.Nullable<decimal> _electricity;
		
		private System.Nullable<decimal> _management;
		
		private System.Nullable<decimal> _repair;
		
		private System.Nullable<decimal> _fine;
		
		private System.Nullable<decimal> _guesthouse;
		
		private System.Nullable<decimal> _guarantee;
		
		private System.Nullable<decimal> _others;
		
		private string _classify_property;
		
		private string _comment;
		
		private string _year_month;
		
		private System.Nullable<decimal> _total;
		
		private string _property;
		
		private string _dorm_order;
		
		private System.Nullable<bool> _can_import;
		
		public VwChangeReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area_id", DbType="Int")]
		public System.Nullable<int> area_id
		{
			get
			{
				return this._area_id;
			}
			set
			{
				if ((this._area_id != value))
				{
					this._area_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="Int")]
		public System.Nullable<int> department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					this._department_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lodging_id", DbType="Int")]
		public System.Nullable<int> lodging_id
		{
			get
			{
				return this._lodging_id;
			}
			set
			{
				if ((this._lodging_id != value))
				{
					this._lodging_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="VarChar(40)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this._department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="VarChar(10)")]
		public string area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this._area = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="VarChar(50)")]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this._account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee", DbType="VarChar(40)")]
		public string employee
		{
			get
			{
				return this._employee;
			}
			set
			{
				if ((this._employee != value))
				{
					this._employee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_number", DbType="VarChar(50)")]
		public string dorm_number
		{
			get
			{
				return this._dorm_number;
			}
			set
			{
				if ((this._dorm_number != value))
				{
					this._dorm_number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rent", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> rent
		{
			get
			{
				return this._rent;
			}
			set
			{
				if ((this._rent != value))
				{
					this._rent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_water", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> water
		{
			get
			{
				return this._water;
			}
			set
			{
				if ((this._water != value))
				{
					this._water = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_electricity", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> electricity
		{
			get
			{
				return this._electricity;
			}
			set
			{
				if ((this._electricity != value))
				{
					this._electricity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_management", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> management
		{
			get
			{
				return this._management;
			}
			set
			{
				if ((this._management != value))
				{
					this._management = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repair", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> repair
		{
			get
			{
				return this._repair;
			}
			set
			{
				if ((this._repair != value))
				{
					this._repair = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> fine
		{
			get
			{
				return this._fine;
			}
			set
			{
				if ((this._fine != value))
				{
					this._fine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guesthouse", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> guesthouse
		{
			get
			{
				return this._guesthouse;
			}
			set
			{
				if ((this._guesthouse != value))
				{
					this._guesthouse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guarantee", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> guarantee
		{
			get
			{
				return this._guarantee;
			}
			set
			{
				if ((this._guarantee != value))
				{
					this._guarantee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> others
		{
			get
			{
				return this._others;
			}
			set
			{
				if ((this._others != value))
				{
					this._others = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classify_property", DbType="VarChar(50)")]
		public string classify_property
		{
			get
			{
				return this._classify_property;
			}
			set
			{
				if ((this._classify_property != value))
				{
					this._classify_property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(200)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this._comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_month", DbType="VarChar(50)")]
		public string year_month
		{
			get
			{
				return this._year_month;
			}
			set
			{
				if ((this._year_month != value))
				{
					this._year_month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this._total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_property", DbType="VarChar(10)")]
		public string property
		{
			get
			{
				return this._property;
			}
			set
			{
				if ((this._property != value))
				{
					this._property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dorm_order", DbType="VarChar(50)")]
		public string dorm_order
		{
			get
			{
				return this._dorm_order;
			}
			set
			{
				if ((this._dorm_order != value))
				{
					this._dorm_order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_can_import", DbType="Bit")]
		public System.Nullable<bool> can_import
		{
			get
			{
				return this._can_import;
			}
			set
			{
				if ((this._can_import != value))
				{
					this._can_import = value;
				}
			}
		}
	}
	
	public partial class get_fuel_used_of_dormResult
	{
		
		private int _dormId;
		
		private System.Nullable<double> _cold;
		
		private System.Nullable<double> _hot;
		
		private System.Nullable<double> _elec;
		
		public get_fuel_used_of_dormResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dormId", DbType="Int NOT NULL")]
		public int dormId
		{
			get
			{
				return this._dormId;
			}
			set
			{
				if ((this._dormId != value))
				{
					this._dormId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cold", DbType="Float")]
		public System.Nullable<double> cold
		{
			get
			{
				return this._cold;
			}
			set
			{
				if ((this._cold != value))
				{
					this._cold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hot", DbType="Float")]
		public System.Nullable<double> hot
		{
			get
			{
				return this._hot;
			}
			set
			{
				if ((this._hot != value))
				{
					this._hot = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_elec", DbType="Float")]
		public System.Nullable<double> elec
		{
			get
			{
				return this._elec;
			}
			set
			{
				if ((this._elec != value))
				{
					this._elec = value;
				}
			}
		}
	}
	
	public partial class check_fuels_usedResult
	{
		
		private string _区号;
		
		private string _房号;
		
		private System.Nullable<double> _上月冷水;
		
		private System.Nullable<double> _上月热水;
		
		private System.Nullable<double> _上月用电;
		
		private System.Nullable<double> _本月冷水;
		
		private System.Nullable<double> _本月热水;
		
		private System.Nullable<double> _本月用电;
		
		private System.Nullable<decimal> _冷水费;
		
		private System.Nullable<decimal> _热水费;
		
		private System.Nullable<decimal> _电费;
		
		public check_fuels_usedResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_区号", DbType="VarChar(20)")]
		public string 区号
		{
			get
			{
				return this._区号;
			}
			set
			{
				if ((this._区号 != value))
				{
					this._区号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_房号", DbType="VarChar(50)")]
		public string 房号
		{
			get
			{
				return this._房号;
			}
			set
			{
				if ((this._房号 != value))
				{
					this._房号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_上月冷水", DbType="Float")]
		public System.Nullable<double> 上月冷水
		{
			get
			{
				return this._上月冷水;
			}
			set
			{
				if ((this._上月冷水 != value))
				{
					this._上月冷水 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_上月热水", DbType="Float")]
		public System.Nullable<double> 上月热水
		{
			get
			{
				return this._上月热水;
			}
			set
			{
				if ((this._上月热水 != value))
				{
					this._上月热水 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_上月用电", DbType="Float")]
		public System.Nullable<double> 上月用电
		{
			get
			{
				return this._上月用电;
			}
			set
			{
				if ((this._上月用电 != value))
				{
					this._上月用电 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_本月冷水", DbType="Float")]
		public System.Nullable<double> 本月冷水
		{
			get
			{
				return this._本月冷水;
			}
			set
			{
				if ((this._本月冷水 != value))
				{
					this._本月冷水 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_本月热水", DbType="Float")]
		public System.Nullable<double> 本月热水
		{
			get
			{
				return this._本月热水;
			}
			set
			{
				if ((this._本月热水 != value))
				{
					this._本月热水 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_本月用电", DbType="Float")]
		public System.Nullable<double> 本月用电
		{
			get
			{
				return this._本月用电;
			}
			set
			{
				if ((this._本月用电 != value))
				{
					this._本月用电 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_冷水费", DbType="Decimal(8,1)")]
		public System.Nullable<decimal> 冷水费
		{
			get
			{
				return this._冷水费;
			}
			set
			{
				if ((this._冷水费 != value))
				{
					this._冷水费 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_热水费", DbType="Decimal(8,1)")]
		public System.Nullable<decimal> 热水费
		{
			get
			{
				return this._热水费;
			}
			set
			{
				if ((this._热水费 != value))
				{
					this._热水费 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_电费", DbType="Decimal(8,1)")]
		public System.Nullable<decimal> 电费
		{
			get
			{
				return this._电费;
			}
			set
			{
				if ((this._电费 != value))
				{
					this._电费 = value;
				}
			}
		}
	}
	
	public partial class take_duplicate_recordResult
	{
		
		private int _id;
		
		private string _宿舍编号;
		
		private string _宿舍区名称;
		
		private string _宿舍类型;
		
		private string _入住性别;
		
		public take_duplicate_recordResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_宿舍编号", DbType="VarChar(50)")]
		public string 宿舍编号
		{
			get
			{
				return this._宿舍编号;
			}
			set
			{
				if ((this._宿舍编号 != value))
				{
					this._宿舍编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_宿舍区名称", DbType="VarChar(20)")]
		public string 宿舍区名称
		{
			get
			{
				return this._宿舍区名称;
			}
			set
			{
				if ((this._宿舍区名称 != value))
				{
					this._宿舍区名称 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_宿舍类型", DbType="VarChar(20)")]
		public string 宿舍类型
		{
			get
			{
				return this._宿舍类型;
			}
			set
			{
				if ((this._宿舍类型 != value))
				{
					this._宿舍类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_入住性别", DbType="VarChar(8)")]
		public string 入住性别
		{
			get
			{
				return this._入住性别;
			}
			set
			{
				if ((this._入住性别 != value))
				{
					this._入住性别 = value;
				}
			}
		}
	}
	
	public partial class take_first_fuel_inputResult
	{
		
		private string _areaName;
		
		private int _dormId;
		
		private string _dormNumber;
		
		private System.Nullable<double> _elec;
		
		private System.Nullable<double> _cold;
		
		private System.Nullable<double> _hot;
		
		private string _year_month;
		
		public take_first_fuel_inputResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_areaName", DbType="VarChar(20)")]
		public string areaName
		{
			get
			{
				return this._areaName;
			}
			set
			{
				if ((this._areaName != value))
				{
					this._areaName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dormId", DbType="Int NOT NULL")]
		public int dormId
		{
			get
			{
				return this._dormId;
			}
			set
			{
				if ((this._dormId != value))
				{
					this._dormId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dormNumber", DbType="VarChar(50)")]
		public string dormNumber
		{
			get
			{
				return this._dormNumber;
			}
			set
			{
				if ((this._dormNumber != value))
				{
					this._dormNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_elec", DbType="Float")]
		public System.Nullable<double> elec
		{
			get
			{
				return this._elec;
			}
			set
			{
				if ((this._elec != value))
				{
					this._elec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cold", DbType="Float")]
		public System.Nullable<double> cold
		{
			get
			{
				return this._cold;
			}
			set
			{
				if ((this._cold != value))
				{
					this._cold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hot", DbType="Float")]
		public System.Nullable<double> hot
		{
			get
			{
				return this._hot;
			}
			set
			{
				if ((this._hot != value))
				{
					this._hot = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_month", DbType="VarChar(50)")]
		public string year_month
		{
			get
			{
				return this._year_month;
			}
			set
			{
				if ((this._year_month != value))
				{
					this._year_month = value;
				}
			}
		}
	}
	
	public partial class take_input_fuelsResult
	{
		
		private int _dormId;
		
		private string _dormNumber;
		
		private string _areaName;
		
		private System.Nullable<double> _pre_cold;
		
		private System.Nullable<double> _pre_hot;
		
		private System.Nullable<double> _pre_elec;
		
		private string _pre_month;
		
		private System.Nullable<double> _cur_cold;
		
		private System.Nullable<double> _cur_hot;
		
		private System.Nullable<double> _cur_elec;
		
		private string _cur_month;
		
		public take_input_fuelsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dormId", DbType="Int NOT NULL")]
		public int dormId
		{
			get
			{
				return this._dormId;
			}
			set
			{
				if ((this._dormId != value))
				{
					this._dormId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dormNumber", DbType="VarChar(50)")]
		public string dormNumber
		{
			get
			{
				return this._dormNumber;
			}
			set
			{
				if ((this._dormNumber != value))
				{
					this._dormNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_areaName", DbType="VarChar(20)")]
		public string areaName
		{
			get
			{
				return this._areaName;
			}
			set
			{
				if ((this._areaName != value))
				{
					this._areaName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pre_cold", DbType="Float")]
		public System.Nullable<double> pre_cold
		{
			get
			{
				return this._pre_cold;
			}
			set
			{
				if ((this._pre_cold != value))
				{
					this._pre_cold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pre_hot", DbType="Float")]
		public System.Nullable<double> pre_hot
		{
			get
			{
				return this._pre_hot;
			}
			set
			{
				if ((this._pre_hot != value))
				{
					this._pre_hot = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pre_elec", DbType="Float")]
		public System.Nullable<double> pre_elec
		{
			get
			{
				return this._pre_elec;
			}
			set
			{
				if ((this._pre_elec != value))
				{
					this._pre_elec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pre_month", DbType="VarChar(50)")]
		public string pre_month
		{
			get
			{
				return this._pre_month;
			}
			set
			{
				if ((this._pre_month != value))
				{
					this._pre_month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cur_cold", DbType="Float")]
		public System.Nullable<double> cur_cold
		{
			get
			{
				return this._cur_cold;
			}
			set
			{
				if ((this._cur_cold != value))
				{
					this._cur_cold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cur_hot", DbType="Float")]
		public System.Nullable<double> cur_hot
		{
			get
			{
				return this._cur_hot;
			}
			set
			{
				if ((this._cur_hot != value))
				{
					this._cur_hot = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cur_elec", DbType="Float")]
		public System.Nullable<double> cur_elec
		{
			get
			{
				return this._cur_elec;
			}
			set
			{
				if ((this._cur_elec != value))
				{
					this._cur_elec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cur_month", DbType="VarChar(50)")]
		public string cur_month
		{
			get
			{
				return this._cur_month;
			}
			set
			{
				if ((this._cur_month != value))
				{
					this._cur_month = value;
				}
			}
		}
	}
	
	public partial class getDiffDepResult
	{
		
		private System.Nullable<int> _empId;
		
		private string _number;
		
		private string _empName;
		
		private string _account_number;
		
		private string _depName;
		
		private System.Nullable<int> _num;
		
		private string _salaryDep;
		
		private System.Nullable<System.DateTime> _in_date;
		
		private System.Nullable<int> _new_dep_id;
		
		public getDiffDepResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int")]
		public System.Nullable<int> empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					this._empId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="VarChar(50)")]
		public string number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this._number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empName", DbType="VarChar(40)")]
		public string empName
		{
			get
			{
				return this._empName;
			}
			set
			{
				if ((this._empName != value))
				{
					this._empName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="VarChar(50)")]
		public string account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this._account_number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depName", DbType="VarChar(40)")]
		public string depName
		{
			get
			{
				return this._depName;
			}
			set
			{
				if ((this._depName != value))
				{
					this._depName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int")]
		public System.Nullable<int> num
		{
			get
			{
				return this._num;
			}
			set
			{
				if ((this._num != value))
				{
					this._num = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaryDep", DbType="NVarChar(255)")]
		public string salaryDep
		{
			get
			{
				return this._salaryDep;
			}
			set
			{
				if ((this._salaryDep != value))
				{
					this._salaryDep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> in_date
		{
			get
			{
				return this._in_date;
			}
			set
			{
				if ((this._in_date != value))
				{
					this._in_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_new_dep_id", DbType="Int")]
		public System.Nullable<int> new_dep_id
		{
			get
			{
				return this._new_dep_id;
			}
			set
			{
				if ((this._new_dep_id != value))
				{
					this._new_dep_id = value;
				}
			}
		}
	}
	
	public partial class getBlankAccountResult
	{
		
		private string _name;
		
		private string _account_number;
		
		private string _card_number;
		
		private string _txm;
		
		public getBlankAccountResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(40)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="VarChar(50)")]
		public string account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this._account_number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_number", DbType="VarChar(20)")]
		public string card_number
		{
			get
			{
				return this._card_number;
			}
			set
			{
				if ((this._card_number != value))
				{
					this._card_number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_txm", DbType="VarChar(10)")]
		public string txm
		{
			get
			{
				return this._txm;
			}
			set
			{
				if ((this._txm != value))
				{
					this._txm = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
